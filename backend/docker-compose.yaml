version: '3'

services:
  # MongoDB setup
  mongodb:
    image: mongo
    container_name: my-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db

  # Zookeeper setup
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  # Kafka setup
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  # Vault setup
  vault:
    image: hashicorp/vault:1.15.0
    container_name: vault
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: myroot
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    command: vault server -dev

  #redis setup
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

# Micro-services 

  #kafkaservices
  emailservice:
    build:
      context: ./kafkaServices/email
      dockerfile: Dockerfile
    container_name: thathashop_emailService
    depends_on:
      - kafka
      - zookeeper

  loggingservice:
    build:
      context: ./kafkaServices/logging
      dockerfile: Dockerfile
    container_name: thathashop_loggingService
    depends_on:
      - kafka
      - zookeeper

  #restServices
  apigateway:
    build:
      context: ./apiGateway
      dockerfile: Dockerfile
    container_name: thathashop_apiGateway
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
      - vault
      - authservice
      - productservice

  authservice:
    build:
      context: ./restServices/authService
      dockerfile: Dockerfile
    container_name: thathashop_authService
    ports:
      - "5001:5001"
    depends_on:
      - kafka
      - mongodb
      - vault
      - loggingservice
      - emailservice
      

  productservice:
    build:
      context: ./restServices/productService
      dockerfile: Dockerfile
    container_name: thathashop_productService
    ports:
      - "5002:5002"
    depends_on:
      - kafka
      - mongodb
      - vault
      - loggingservice
      - emailservice
      
  
  cartservice:
    build:
      context: ./restServices/cartService
      dockerfile: Dockerfile
    container_name: thathashop_cartService
    ports:
      - "5003:5003"
    depends_on:
      - kafka
      - mongodb
      - vault
      - loggingservice
      - emailservice
      - productservice

  orderservice:
    build:
      context: ./restServices/orderService
      dockerfile: Dockerfile
    container_name: thathashop_orderService
    ports:
      - "5004:5004"
    depends_on:
      - kafka
      - mongodb
      - vault
      - loggingservice
      - emailservice
      - productservice

  


      
#redis volume 

volumes:
  redis_data:
  mongodata: